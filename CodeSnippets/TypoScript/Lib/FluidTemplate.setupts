lib.fluidTemplate {
    base = FLUIDTEMPLATE
    base {
        extbase.controllerExtensionName = {$theme.key}
        layoutRootPaths {
            10 = {$theme.resLayouts}
            15 = EXT:theme_project/Resources/Private/Layouts
            20 = EXT:sitemodification/Resources/Private/Layouts
        }
        partialRootPaths {
            10 = {$theme.resPartials}
            15 = EXT:theme_project/Resources/Private/Partials
            20 = EXT:sitemodification/Resources/Private/Partials
        }
        templateRootPaths {
            10 = {$theme.resTemplates}/Page
            15 = EXT:theme_project/Resources/Private/Templates
            20 = EXT:sitemodification/Resources/Private/Templates
        }
        variables {
            RootUid = TEXT
            RootUid {
                data = leveluid : 0
            }
            Level1Title = TEXT
            Level1Title {
                data = leveltitle: 1
                if.value.data = level
                if.isLessThan = 1
            }
        }
        dataProcessing {

        }
    }

// example templateName selection based on active beLayout and override if a special doktype is set
	defaultWithDoktypeOverride < .base
	defaultWithDoktypeOverride {
		templateName = TEXT
		templateName.stdWrap {
			cObject = TEXT
			cObject {
				data = pagelayout
				split {
					token = pagets__
					1.current = 1
					1.wrap = |
				}

				// Override Template if special doktype with value "8" is active
				override = SpecialTemplateName
				override {
					if.equals.field = doktype
					if.value = 8
				}

				ifEmpty = Default
			}
		}
	}
}


